
package com.ticketnetwork.webservices2;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.1 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "TNServicesStringInputs", targetNamespace = "http://webservices2.ticketnetwork.com", wsdlLocation = "http://webservices2.ticketnetwork.com/R2/TNServicesStringInputs.asmx?wsdl")
public class TNServicesStringInputs
    extends Service
{

    private final static URL TNSERVICESSTRINGINPUTS_WSDL_LOCATION;

    static {
        URL url = null;
        try {
            url = new URL("http://webservices2.ticketnetwork.com/R2/TNServicesStringInputs.asmx?wsdl");
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        TNSERVICESSTRINGINPUTS_WSDL_LOCATION = url;
    }

    public TNServicesStringInputs(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TNServicesStringInputs() {
        super(TNSERVICESSTRINGINPUTS_WSDL_LOCATION, new QName("http://webservices2.ticketnetwork.com", "TNServicesStringInputs"));
    }

    /**
     * 
     * @return
     *     returns TNServicesStringInputsSoap
     */
    @WebEndpoint(name = "TNServicesStringInputsSoap")
    public TNServicesStringInputsSoap getTNServicesStringInputsSoap() {
        return (TNServicesStringInputsSoap)super.getPort(new QName("http://webservices2.ticketnetwork.com", "TNServicesStringInputsSoap"), TNServicesStringInputsSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TNServicesStringInputsSoap
     */
    @WebEndpoint(name = "TNServicesStringInputsSoap")
    public TNServicesStringInputsSoap getTNServicesStringInputsSoap(WebServiceFeature... features) {
        return (TNServicesStringInputsSoap)super.getPort(new QName("http://webservices2.ticketnetwork.com", "TNServicesStringInputsSoap"), TNServicesStringInputsSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns TNServicesStringInputsSoap
     */
    @WebEndpoint(name = "TNServicesStringInputsSoap12")
    public TNServicesStringInputsSoap getTNServicesStringInputsSoap12() {
        return (TNServicesStringInputsSoap)super.getPort(new QName("http://webservices2.ticketnetwork.com", "TNServicesStringInputsSoap12"), TNServicesStringInputsSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TNServicesStringInputsSoap
     */
    @WebEndpoint(name = "TNServicesStringInputsSoap12")
    public TNServicesStringInputsSoap getTNServicesStringInputsSoap12(WebServiceFeature... features) {
        return (TNServicesStringInputsSoap)super.getPort(new QName("http://webservices2.ticketnetwork.com", "TNServicesStringInputsSoap12"), TNServicesStringInputsSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns TNServicesStringInputsHttpGet
     */
    @WebEndpoint(name = "TNServicesStringInputsHttpGet")
    public TNServicesStringInputsHttpGet getTNServicesStringInputsHttpGet() {
        return (TNServicesStringInputsHttpGet)super.getPort(new QName("http://webservices2.ticketnetwork.com", "TNServicesStringInputsHttpGet"), TNServicesStringInputsHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TNServicesStringInputsHttpGet
     */
    @WebEndpoint(name = "TNServicesStringInputsHttpGet")
    public TNServicesStringInputsHttpGet getTNServicesStringInputsHttpGet(WebServiceFeature... features) {
        return (TNServicesStringInputsHttpGet)super.getPort(new QName("http://webservices2.ticketnetwork.com", "TNServicesStringInputsHttpGet"), TNServicesStringInputsHttpGet.class, features);
    }

    /**
     * 
     * @return
     *     returns TNServicesStringInputsHttpPost
     */
    @WebEndpoint(name = "TNServicesStringInputsHttpPost")
    public TNServicesStringInputsHttpPost getTNServicesStringInputsHttpPost() {
        return (TNServicesStringInputsHttpPost)super.getPort(new QName("http://webservices2.ticketnetwork.com", "TNServicesStringInputsHttpPost"), TNServicesStringInputsHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TNServicesStringInputsHttpPost
     */
    @WebEndpoint(name = "TNServicesStringInputsHttpPost")
    public TNServicesStringInputsHttpPost getTNServicesStringInputsHttpPost(WebServiceFeature... features) {
        return (TNServicesStringInputsHttpPost)super.getPort(new QName("http://webservices2.ticketnetwork.com", "TNServicesStringInputsHttpPost"), TNServicesStringInputsHttpPost.class, features);
    }

}
